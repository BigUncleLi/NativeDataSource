package org.uncle.lee.nativedatasource.dao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;
import org.uncle.lee.nativedatasource.Entity.in.App;
import org.uncle.lee.nativedatasource.Entity.in.Contact;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig appDaoConfig;
    private final DaoConfig contactDaoConfig;

    private final AppDao appDao;
    private final ContactDao contactDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        appDaoConfig = daoConfigMap.get(AppDao.class).clone();
        appDaoConfig.initIdentityScope(type);

        contactDaoConfig = daoConfigMap.get(ContactDao.class).clone();
        contactDaoConfig.initIdentityScope(type);

        appDao = new AppDao(appDaoConfig, this);
        contactDao = new ContactDao(contactDaoConfig, this);

        registerDao(App.class, appDao);
        registerDao(Contact.class, contactDao);
    }
    
    public void clear() {
        appDaoConfig.getIdentityScope().clear();
        contactDaoConfig.getIdentityScope().clear();
    }

    public AppDao getAppDao() {
        return appDao;
    }

    public ContactDao getContactDao() {
        return contactDao;
    }

}
